課題20

入力の最初の9文字（足りない場合は全部）を受け取って、それをそのまま表示するプログラムを作るつもりで、次のようなコードを書いた。このコードには致命的な間違いが含まれている。問題点を指摘し、修正案を示せ。レポートはテキストファイルとして作成すること。

#include <stdio.h>
 
int main(int argc, char *argv[])
{
    char s[9];
    int c;
    int i = 0;
 
    c = getchar();
    while ((c != EOF) && (i < 9)) {
        s[i++] = c;
        c = getchar();
    }
 
    printf("%s\n", s);
 
    return 0;
}
参考: 教科書9-1章

締切: 2014年10月30日23時

課題21

次のコードの空欄を埋めることで、入力として文字列を1つ受け取って、その文字列をそのまま表示するプログラムを作成せよ。

#include <stdio.h>
 
int main(int argc, char *argv[])
{
    char s1[100] = "";
    char s2[100];
    int i;
 
    scanf("%99s", s1);
 
    /* ここを埋める。 */
 
    printf("%s\n", s2);
 
    return 0;
}
参考: 教科書の例題9-8

締切: 2014年10月30日23時

課題22

空でない文字列を1つ入力として受け取って、それを後ろから読んだ文字列を表示するプログラムを作成せよ。

 参考: 教科書の演習問題9-8

締切: 2014年10月30日23時

課題23

以下のプログラムを実行すると、入力に係わらず「NG」と表示される。適当に修正して、入力が「yes」のときだけ「OK」と表示されるようなプログラムを作成せよ。

#include <stdio.h>
 
int main(int argc, char *argv[])
{
    char s[100] = "";
 
    scanf("%99s", s);
 
    if (s == "yes")
        puts("OK");
    else
        puts("NG");
 
    return 0;
}
参考: 教科書9-3章

締切: 2014年10月30日23時

課題24

2つの文字列を入力として受け取って、それらが同じ文字列なら「OK」、違っていれば「NG」と表示するプログラムを作成せよ。

参考: 教科書9-3章

締切: 2014年10月30日23時

来週までに内容が変更される可能性があります。レポートはまだ提出できません。

課題25

2つの入力を入れ替えて表示するプログラムを作るつもりで、以下のようなコードを書いた。これが意図通りに動かない理由を説明せよ。（解決案は課題26と同様なので、どうすればよいかではなくなぜかを答えること。）レポートはテキストファイルとして作成すること。

#include <stdio.h>
 
void swap(int x, int y)
{
    int z;
 
    z = x;
    x = y;
    y = z;
}
 
int main(int argc, char *argv[])
{
    int x = 0, y = 0;
 
    scanf("%d", &x);
    scanf("%d", &y);
 
    swap(x, y);
 
    printf("%d\n", x);
    printf("%d\n", y);
 
    return 0;
}
参考: 教科書6-3章

締切: 2014年11月06日23時

課題26

3つの整数を入力として受け取って、それらを小さいものから順に表示するプログラムを作成せよ。ただし、以下のような関数を定義して使用すること。

void sort3(int *p0, int *p1, int *p2)
{
    /* 「(*p0 <= *p1) && (*p1 <= *p2)」が成り立つように、`p0'、`p1'、`p2'の指す先の値を入れ替える。 */
}

参考: 教科書の演習10-2

締切: 2014年11月06日23時

課題27

課題24と同様のプログラムを作成せよ。ただし、コード中で配列の添字演算子を用いてはならない。 （配列を宣言するのはかまわない。）

参考: 教科書の演習11-3

締切: 2014年11月06日23時

課題28

以下のコードには致命的な間違いが含まれている。問題点を指摘し、修正案を示せ。レポートはテキストファイルとして作成すること。

#include <stdio.h>
 
int main(int argc, char *argv[])
{
    char *s = "0123456789";
 
    scanf("%10s", s);
 
    printf("%s\n", s);
 
    return 0;
}
参考: 教科書11-2章

締切: 2014年11月06日23時

課題29

次のコードには、致命的な間違いが含まれている。「main」を書き換えることなく、5つの文字列を受け取って、それらを逆順に表示するプログラムを完成させよ。

#include <stdio.h>
 
void reverse(char *a[], int k)
{
    int i;
    char *tmp;
 
    for (i = 0; i < (k - 1) / 2; i++) {
        tmp = a[i];
        a[i] = a[k - i - 1];
        a[k - i - 1] = tmp;
    }
}
 
int main(int argc, char *argv[])
{
    char a[5][10] = {"", "", "", "", ""};
    int i;
 
    for (i = 0; i < 5; i++)
        scanf("%9s", a[i]);
 
    reverse(a, 5);
 
    for (i = 0; i < 5; i++)
        printf("%s\n", a[i]);
 
    return 0;
}
参考: 教科書10-3章、11章

締切: 2014年11月06日23時

課題30

次のコードを実行すると何が表示されるか、プログラムを実行せずに考察した後、実行結果を確認せよ。また、なぜそのような出力になったのか、理由を説明せよ。レポートはテキストファイルとして作成すること。

#include <stdio.h>
 
int main(int argc, char *argv[])
{
    char *x[4] = {"enter", "new", "point", "first"};
    char **xp[4];
    char ***xpp;
    int i;
 
    for (i = 0; i < 4; i++)
        xp[i] = x + (3 - i);
    xpp = xp;
 
    printf("%s", **++xpp);
    printf("%s ", *--*++xpp+3);
    printf("%s", *xpp[-2]+3);
    printf("%s\n", *--xpp[-1]+1);
 
    return 0;
}
締切: 2014年11月06日23時